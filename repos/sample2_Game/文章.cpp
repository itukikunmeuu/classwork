/*
　　
 ・メモリの使用量は減らせるだけ減らしたほうがいい
■問題点
・コンストラクタでLoadGraph()にしているので敵を複数隊準備したら
同じグラフィックが複数メモリにロードされている

・DXライブラリは
     DxLib_Init() で初期化処理　今からDxライブラリ使いますよ
	 DxLib_End() で終了処理　これでDxライブラリを使うのを終わります

今の作りだとDxLib_End()が呼ばれた後でEnemyのデストラクタが呼ばれ、Dxライブラリの関数が使われてしまう

■やりたいこと
・同じグラフィックのLoadGraph()は1回にまとめたい
・DeleteGraph()した後にDxLib_End()が呼ばれるようにしたい

→グラフィックの管理はEnemyにやらせるのではなく、上の階層でやらせる

次回すること
・グラフィックを表示するEnemyクラスを作ります
・今までやっていた内容は説明のためにあまりよくない
・このあたりDxLibとクラスを組み合わせ

■変数/関数の命名方法のルール
・スネークケース
		enemy_num
		plsyrt_pos
		単語と単語を_でつなぐ
		すべて大文字
・キャメルケース
		アッパーキャメルケース　 Upper
			GetPlayerPos()
			先頭は大文字
			複数の英単語をつなぐときｍ単語の切り替わり部分を大文字にする

		ローワーキャメルケース　　Lawer
		setEnemyPos（）
		先頭箱文字
		複数の英単語をつなぐとき、単語の切り替わり部分を大文字にする
*/